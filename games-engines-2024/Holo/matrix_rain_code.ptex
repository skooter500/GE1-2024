{"name":"289","type":"graph","parameters":{},"node_position":{"x":0,"y":0},"seed":0,"seed_locked":false,"label":"Graph","shortdesc":"","longdesc":"","nodes":[{"name":"Material","type":"material_unlit","parameters":{"blend":1},"node_position":{"x":2119.853271,"y":693.446411},"seed":0,"seed_locked":false,"export_paths":{}},{"name":"sixteen_segment","type":"shader","parameters":{"t":0,"a":0,"sl":0,"st":0.24,"dps":0.65,"dpx":0.196945,"dpy":0.39553,"da":60,"b":0,"dp":true},"node_position":{"x":620.914124,"y":374.207855},"seed":0,"seed_locked":false,"shader_model":{"name":"Sixteen Segment Display","global":"// Display modes\nconst bool ASCII_DISPLAY = true;\nconst bool CUSTOM_DISPLAY = false;\n\n// ASCII Character configurations (31-125)\n// 31 reserved to display all segments\n\nconst float CHARS[] = {\n\tfloat(0xFFFF), float(0x0000), float(0x0202), float(0x0022),\n    float(0xE722), float(0xE774), float(0xCF71), float(0xB1E8),\n\tfloat(0x0020), float(0x0081), float(0x0808), float(0xCCA9),\n\tfloat(0xC420), float(0x0800), float(0x8400), float(0x0000),\n\tfloat(0x0801), float(0x3B57), float(0x0203), float(0xB546),\n\tfloat(0x2746), float(0x8612), float(0xA1D4), float(0xB754),\n\tfloat(0x0246), float(0xB756), float(0xA756), float(0x4020),\n\tfloat(0x0820), float(0x8081), float(0xA500), float(0x0C08),\n\tfloat(0x4446), float(0x3576), float(0x9656), float(0x6766),\n\tfloat(0x3154), float(0x6366), float(0xB154), float(0x9054),\n\tfloat(0x3754), float(0x9612), float(0x6164), float(0x3302),\n\tfloat(0x9091), float(0x3110), float(0x121B), float(0x129A),\n\tfloat(0x3356), float(0x9456), float(0x33D6), float(0x94D6),\n\tfloat(0xA754), float(0x4064), float(0x3312), float(0x1811),\n\tfloat(0x1A92), float(0x0889), float(0xA712), float(0x2945),\n\tfloat(0x4124), float(0x0088), float(0x6060), float(0x0880),\n\tfloat(0x2100), float(0x0008), float(0xF100), float(0xF010),\n\tfloat(0xB000), float(0x4702), float(0xB800), float(0xC424),\n\tfloat(0xE070), float(0xD010), float(0x4000), float(0x7020),\n\tfloat(0x40A1), float(0x1010), float(0xD600), float(0xD000),\n\tfloat(0xF000), float(0x9070), float(0x0626), float(0x9000),\n\tfloat(0xE050), float(0xB010), float(0x7000), float(0x1800),\n\tfloat(0x1A80), float(0x0889), float(0x0722), float(0xA800),\n\tfloat(0xC124), float(0x4020), float(0x6460)\n};\n\n/*\n bit position mapping:\n  _10__ __14__\n | \\   |   /  |\n 12 13 11 16  15\n |    \\|/     |\n  __1__ __6___\n |    /|\\     |\n 4  5  2  9   7\n | /   |   \\  |\n  __3__|__8___\n\n 1  4    8   12    16\n |  |    |    |    |        \n 0000 0000 0000 0000\n\n e.g. M = 0001 0010 0001 1011 (binary) = 4635 (dec) = 0x121B (hex) \n*/\n\nfloat m(vec4 d) { return max(max(d.x,d.y),max(d.z,d.w)); }\n\nfloat fs(vec2 p, float st, float sl, vec4 s14, float s5, bool sf, float da)\n{\n\tconst vec2 h = vec2(1,-1);\n\tda *= 0.017453;\n\t\n\tsl *= 0.1;\n\tst *= 0.5;\n\tsl = clamp(sl, 0,1);\n\n\tp = 2.0 * (p - 0.5);\n\tvec2 p1 = p;\n\tvec2 p2 = p;\n\tvec2 _p = p;\n\t\n\tp = abs(p) - vec2(0.25,0.4);\n\t\n\tfloat f = -max(p.x, p.y);\n\tfloat ism = f - st - (sl*1.625);\n\tfloat isg = min(ism, st-abs(dot(normalize(vec2(sin(da),cos(da))),_p*vec2(sf ? 1.0:-1.0 ,1.0))));\n\t\n\tfloat d = min(st - abs(f), min(-dot(p, normalize(h.xx)), abs(dot(p, normalize(h)))) - sl);\n\n\tp1.x = abs(p1.x); p2.y = abs(p2.y);\n\tp1 += vec2(0.15, 0.0); p2 -= vec2(0.0, 0.15);\n\n\tfloat q1 = -dot(p1,h.xx);\n\tfloat q2 = min(p2.x, -dot(p2,h.yx));\n\tfloat q3 = dot(p1, h.yx);\n\tfloat q4 = min(-p2.x, -dot(p2,h.xx));\n\t\n\tvec4 qv4 = vec4(q1,q2,q3,q4);\n\tqv4 = min(qv4,s14);\n\t\n\treturn max(m(min(vec4(d),qv4)), min(isg,s5));\n}\n\nfloat i(float n, int b) { b = 16 - b; return float(mod(floor(n / exp2(floor(float(b)))), 2.0) != 0.0); }\n\nfloat xvisd(vec2 uv, float st, float sl, float bevel, float a, float dps, vec2 dpo, float da, bool is_ascii, bool dp)\n{\n\tfloat d;\n\tconst vec2 b = vec2(1,0);\n\n\tint n = int(clamp(a, 31.0, 125.0) - 31.0);\n\n\tfloat ch = is_ascii ? CHARS[n] : a;\n\tfloat dpt = is_ascii ? (( n == 0 || n == 15 || n == 32 ) ? 1.0 : 0.0) : float(dp);\n\t\n\tst = clamp(st, 0, 1) * 0.5;\n\n\tfloat d1 = fs(uv+vec2(0.125, -0.2), st, sl, vec4(i(ch,1), i(ch,2), i(ch,3), i(ch,4)), i(ch,5) ,true, da );\n\tfloat d2 = fs(uv-vec2(0.125,  0.2), st, sl, vec4(i(ch,6), i(ch,7), i(ch,8), 0), i(ch,9) ,false, da);\n\tfloat d3 = fs(uv+vec2(0.125,  0.2), st, sl, vec4(i(ch,10), i(ch,11),0, i(ch,12)), i(ch,13) ,false, da);\n\tfloat d4 = fs(uv-vec2(0.125, -0.2), st, sl, vec4(i(ch,14), i(ch,15),0,0), i(ch,16), true, da);\n\t\n\td = m(vec4(d1,d2,d3,d4));\n\td = max(d,(-distance(uv-0.5,dpo)*3.0)+0.1*dps*dpt);\n\n\treturn clamp(d/max(bevel, 1e-4), 0, 1);\n}\n\nfloat xvisd_custom(vec2 uv, float st, float sl, float bevel, float a, float dps, vec2 dpo, float da, bool dp)\n{\n\treturn xvisd(uv, st, sl, bevel, a, dps, dpo, da, CUSTOM_DISPLAY, dp);\n}\n\nfloat xvisd_ascii(vec2 uv, float st, float sl, float bevel, float a, float dps, vec2 dpo, float da, bool dp)\n{\n\treturn xvisd(uv, st, sl, bevel, a, dps, dpo, da, ASCII_DISPLAY, dp);\n}\n\nfloat all_seg(vec2 uv, float st, float sl, float dps, vec2 dpo, float da)\n{\n\treturn xvisd(uv, st, sl, 0, 31.0, dps, dpo, da, ASCII_DISPLAY, false);\n}","instance":"","code":"","shortdesc":"Sixteen Segment Display","parameters":[{"values":[{"name":"ASCII","value":"ascii"},{"name":"Custom","value":"custom"}],"default":0,"name":"t","label":"Display","type":"enum","shortdesc":"Display Mode","longdesc":"Specifies how the character is handled.\n\nASCII: Read as an ASCII code in decimal (32-125), 31 turns all segments on.\n\nCustom: Read as an integer (0-65535). Interpreted as an unsigned 16-bit binary number which determines which segment(s) to turn on (e.g. 4635 = 'M')."},{"min":31,"max":125,"step":1,"default":31,"control":"None","name":"a","label":"1:","type":"float","shortdesc":"Character Code","longdesc":"Character code/configuration for the display. See 'Display Mode' for more details."},{"min":0,"max":1,"step":0.01,"default":0.15,"control":"None","name":"sl","label":"Gap","type":"float","shortdesc":"Gap between segments"},{"min":0,"max":1,"step":0.01,"default":0.2,"control":"None","name":"st","label":"Thickness","type":"float","shortdesc":"Segment Thickness"},{"min":0,"max":1,"step":0.001,"default":0.65,"control":"None","name":"dps","label":"DP Size","type":"float","shortdesc":"Size of the decimal point"},{"min":0,"max":1,"step":0.001,"default":0.3,"control":"None","name":"dpx","label":"DP Position","type":"float","shortdesc":"Decimal point position on the x axis"},{"min":0,"max":1,"step":0.001,"default":0.415,"control":"None","name":"dpy","label":"5:","type":"float","shortdesc":"Decimal point position on the y axis"},{"min":0,"max":180,"step":1,"default":60,"control":"None","name":"da","label":"Diagonals Rotation","type":"float","shortdesc":"Rotation angle for the diagonal segments"},{"min":0,"max":1,"step":0.01,"default":0,"control":"None","name":"b","label":"Bevel","type":"float","shortdesc":"Width of the edge of each segment"},{"default":false,"name":"dp","label":"Decimal Point","type":"boolean","shortdesc":"Decimal point (DP) toggle","longdesc":"Toggles the decimal point. This option only works when the display mode is set to 'custom'"}],"inputs":[{"name":"amap","label":"1:","default":"0.0","type":"f","shortdesc":"Character Code Map"},{"name":"bevel_map","label":"7:","default":"1.0","type":"f","shortdesc":"Bevel Map","longdesc":"Map that affects the bevel parameter"},{"name":"cuv","label":"","default":"$uv","type":"rgb","shortdesc":"Custom UV"}],"outputs":[{"type":"f","f":"xvisd_$t($cuv($uv).xy, $st, $sl, $b*$bevel_map($uv), ($a == 0.0 ? $amap($uv): $a), $dps, vec2($dpx, $dpy), $da, $dp)","shortdesc":"Display Output"},{"type":"f","f":"all_seg($cuv($uv).xy, $st, $sl, $dps, vec2($dpx, $dpy), $da)","shortdesc":"Display Mask"}]}},{"name":"transform2","type":"transform2","parameters":{"translate_x":0,"translate_y":0,"rotate":0,"scale_x":1,"scale_y":1,"mode":2},"node_position":{"x":-1798.857178,"y":400},"seed":0,"seed_locked":false},{"name":"fill_to_random_grey","type":"fill_to_random_grey","parameters":{"edgecolor":1},"node_position":{"x":-1500,"y":400},"seed":0.035656,"seed_locked":false},{"name":"math_v3_4","type":"math_v3","parameters":{"op":2,"d_in1_x":0,"d_in1_y":0,"d_in1_z":0,"d_in2_x":100,"d_in2_y":0,"d_in2_z":0,"clamp":false},"node_position":{"x":-1500,"y":260},"seed":0,"seed_locked":false},{"name":"math_v3_5","type":"math_v3","parameters":{"op":9,"d_in1_x":0,"d_in1_y":0,"d_in1_z":0,"d_in2_x":0,"d_in2_y":0,"d_in2_z":0,"clamp":false},"node_position":{"x":-1500,"y":120},"seed":0,"seed_locked":false},{"name":"math","type":"math","parameters":{"op":2,"default_in1":0,"default_in2":14.62,"clamp":false},"node_position":{"x":-1460,"y":760},"seed":0,"seed_locked":false},{"name":"math_v3_2","type":"math_v3","parameters":{"op":2,"d_in1_x":0,"d_in1_y":0,"d_in1_z":0,"d_in2_x":100,"d_in2_y":100,"d_in2_z":0,"clamp":false},"node_position":{"x":-1100,"y":340},"seed":0,"seed_locked":false},{"name":"math_v3_3","type":"math_v3","parameters":{"op":12,"d_in1_x":0,"d_in1_y":0,"d_in1_z":0,"d_in2_x":0,"d_in2_y":0,"d_in2_z":0,"clamp":false},"node_position":{"x":-400,"y":500},"seed":0,"seed_locked":false},{"name":"math_v3_7","type":"math_v3","parameters":{"op":9,"d_in1_x":0,"d_in1_y":0,"d_in1_z":0,"d_in2_x":0,"d_in2_y":0,"d_in2_z":0,"clamp":false},"node_position":{"x":-905.392578,"y":55.225159},"seed":0,"seed_locked":false},{"name":"fill_to_random_grey_2","type":"fill_to_random_grey","parameters":{"edgecolor":1},"node_position":{"x":-251.08992,"y":248.41568},"seed":0.822669,"seed_locked":false},{"name":"remap","type":"remap","parameters":{"min":32,"max":105,"step":0},"node_position":{"x":340,"y":140},"seed":0,"seed_locked":false},{"name":"math_v3_8","type":"math_v3","parameters":{"op":1,"d_in1_x":0,"d_in1_y":0,"d_in1_z":0,"d_in2_x":0.18,"d_in2_y":0,"d_in2_z":0,"clamp":false},"node_position":{"x":-607.963379,"y":325.888947},"seed":0,"seed_locked":false},{"name":"decompose","type":"decompose","parameters":{},"node_position":{"x":-1500,"y":460},"seed":0,"seed_locked":false},{"name":"math_2","type":"math","parameters":{"op":2,"default_in1":0,"default_in2":100,"clamp":false},"node_position":{"x":-1120,"y":540},"seed":0,"seed_locked":false},{"name":"math_3","type":"math","parameters":{"op":9,"default_in1":0,"default_in2":0,"clamp":false},"node_position":{"x":-894.34906,"y":560.159546},"seed":0,"seed_locked":false},{"name":"math_5","type":"math","parameters":{"op":1,"default_in1":0,"default_in2":0,"clamp":false},"node_position":{"x":-660,"y":700},"seed":0,"seed_locked":false},{"name":"math_6","type":"math","parameters":{"op":12,"default_in1":0,"default_in2":0,"clamp":false},"node_position":{"x":-440,"y":700},"seed":0,"seed_locked":false},{"name":"math_7","type":"math","parameters":{"op":2,"default_in1":0,"default_in2":0,"clamp":false},"node_position":{"x":1080,"y":560},"seed":0,"seed_locked":false},{"name":"remap_2","type":"remap","parameters":{"min":-1.41,"max":3.35,"step":0},"node_position":{"x":1148.102661,"y":706.043945},"seed":0,"seed_locked":false},{"name":"colorize","type":"colorize","parameters":{"gradient":{"type":"Gradient","points":[{"pos":0.510099,"r":0,"g":0,"b":0,"a":1},{"pos":0.972404,"r":0.211716,"g":0.949488,"b":0.137819,"a":1}],"interpolation":1}},"node_position":{"x":580,"y":760},"seed":0,"seed_locked":false},{"name":"blend","type":"blend","parameters":{"blend_type":2,"amount":1},"node_position":{"x":1349.078613,"y":715.066711},"seed":0,"seed_locked":false},{"name":"remote_1","type":"remote","parameters":{"param0":100},"node_position":{"x":-1603.382812,"y":636.4552},"seed":0,"seed_locked":false,"widgets":[{"name":"param0","label":"Unnamed","type":"linked_control","linked_widgets":[{"node":"math_v3_4","widget":"d_in2_x"},{"node":"math_2","widget":"default_in2"},{"node":"math_v3_2","widget":"d_in2_x"},{"node":"math_v3_2","widget":"d_in2_y"}]}]},{"name":"math_8","type":"math","parameters":{"op":3,"default_in1":0,"default_in2":80,"clamp":false},"node_position":{"x":-880,"y":700},"seed":0,"seed_locked":false},{"name":"math_4","type":"math","parameters":{"op":0,"default_in1":0,"default_in2":"$time/3.0","clamp":false},"node_position":{"x":-1160.274292,"y":798.3396},"seed":0,"seed_locked":false},{"name":"remap_3","type":"remap","parameters":{"min":-2.39,"max":0.45,"step":0},"node_position":{"x":427.469543,"y":894.403625},"seed":0,"seed_locked":false},{"name":"blend_2","type":"blend","parameters":{"blend_type":9,"amount":1},"node_position":{"x":1579.971191,"y":664.619568},"seed":0,"seed_locked":false},{"name":"math_9","type":"math","parameters":{"op":12,"default_in1":0,"default_in2":0,"clamp":false},"node_position":{"x":40,"y":420},"seed":0,"seed_locked":false},{"name":"remap_4","type":"remap","parameters":{"min":-10,"max":1,"step":0},"node_position":{"x":-200,"y":820},"seed":0,"seed_locked":false},{"name":"math_10","type":"math","parameters":{"op":0,"default_in1":0,"default_in2":0,"clamp":true},"node_position":{"x":20,"y":800},"seed":0,"seed_locked":false},{"name":"math_11","type":"math","parameters":{"op":0,"default_in1":0,"default_in2":0,"clamp":false},"node_position":{"x":360,"y":380},"seed":0,"seed_locked":false},{"name":"math_12","type":"math","parameters":{"op":0,"default_in1":0,"default_in2":"$time/100.0","clamp":false},"node_position":{"x":-200,"y":0},"seed":0,"seed_locked":false},{"name":"math_13","type":"math","parameters":{"op":12,"default_in1":0,"default_in2":0,"clamp":false},"node_position":{"x":80,"y":180},"seed":0,"seed_locked":false},{"name":"blend_3","type":"blend","parameters":{"blend_type":5,"amount":1},"node_position":{"x":723.925598,"y":852.001587},"seed":0,"seed_locked":false},{"name":"uniform","type":"uniform","parameters":{"color":{"type":"Color","r":0.061086,"g":0.632351,"b":0.140481,"a":1}},"node_position":{"x":454.810394,"y":813.869812},"seed":0,"seed_locked":false},{"name":"blend_4","type":"blend","parameters":{"blend_type":0,"amount":1},"node_position":{"x":1023.925537,"y":892.001587},"seed":0,"seed_locked":false},{"name":"uniform_2","type":"uniform","parameters":{"color":{"type":"Color","r":0,"g":0,"b":0,"a":1}},"node_position":{"x":803.925598,"y":992.001648},"seed":0,"seed_locked":false}],"connections":[{"from":"transform2","from_port":0,"to":"math_v3_4","to_port":0},{"from":"math_v3_4","from_port":0,"to":"math_v3_5","to_port":0},{"from":"math_v3_5","from_port":0,"to":"fill_to_random_grey","to_port":0},{"from":"fill_to_random_grey","from_port":0,"to":"math","to_port":0},{"from":"math_v3_3","from_port":0,"to":"sixteen_segment","to_port":2},{"from":"math_v3_2","from_port":0,"to":"math_v3_7","to_port":0},{"from":"math_v3_7","from_port":0,"to":"math_v3_8","to_port":0},{"from":"math_v3_8","from_port":0,"to":"fill_to_random_grey_2","to_port":0},{"from":"math_v3_2","from_port":0,"to":"math_v3_3","to_port":0},{"from":"transform2","from_port":0,"to":"math_v3_2","to_port":0},{"from":"transform2","from_port":0,"to":"decompose","to_port":0},{"from":"decompose","from_port":1,"to":"math_2","to_port":0},{"from":"math_2","from_port":0,"to":"math_3","to_port":0},{"from":"math_5","from_port":0,"to":"math_6","to_port":0},{"from":"sixteen_segment","from_port":0,"to":"math_7","to_port":0},{"from":"math_6","from_port":0,"to":"math_7","to_port":1},{"from":"math_7","from_port":0,"to":"remap_2","to_port":0},{"from":"math_6","from_port":0,"to":"colorize","to_port":0},{"from":"remap_2","from_port":0,"to":"blend","to_port":0},{"from":"colorize","from_port":0,"to":"blend","to_port":1},{"from":"math_3","from_port":0,"to":"math_8","to_port":0},{"from":"math_8","from_port":0,"to":"math_5","to_port":0},{"from":"math","from_port":0,"to":"math_4","to_port":0},{"from":"math_4","from_port":0,"to":"math_5","to_port":1},{"from":"math_6","from_port":0,"to":"remap_3","to_port":0},{"from":"remap","from_port":0,"to":"sixteen_segment","to_port":0},{"from":"math_6","from_port":0,"to":"remap_4","to_port":0},{"from":"remap_4","from_port":0,"to":"math_10","to_port":0},{"from":"math_10","from_port":0,"to":"math_9","to_port":0},{"from":"math_9","from_port":0,"to":"math_11","to_port":0},{"from":"math_11","from_port":0,"to":"remap","to_port":0},{"from":"fill_to_random_grey_2","from_port":0,"to":"math_12","to_port":0},{"from":"math_12","from_port":0,"to":"math_13","to_port":0},{"from":"math_13","from_port":0,"to":"math_11","to_port":1},{"from":"blend","from_port":0,"to":"blend_2","to_port":0},{"from":"remap_3","from_port":0,"to":"blend_3","to_port":0},{"from":"uniform","from_port":0,"to":"blend_3","to_port":1},{"from":"blend_3","from_port":0,"to":"blend_4","to_port":0},{"from":"uniform_2","from_port":0,"to":"blend_4","to_port":1},{"from":"blend_4","from_port":0,"to":"blend_2","to_port":1},{"from":"blend_2","from_port":0,"to":"Material","to_port":0}]}